{"ast":null,"code":"import api from './Api';\nexport const productService = {\n  getAllProducts: async () => {\n    try {\n      const response = await api.get('/products');\n      return response.data;\n    } catch (error) {\n      var _error$response;\n      throw ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error;\n    }\n  },\n  getProduct: async productId => {\n    try {\n      const response = await api.get(`/products/${productId}`);\n      return response.data;\n    } catch (error) {\n      var _error$response2;\n      throw ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) || error;\n    }\n  },\n  getProductsByCategory: async category => {\n    try {\n      const response = await api.get(`/products?category=${category}`);\n      return response.data;\n    } catch (error) {\n      var _error$response3;\n      throw ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data) || error;\n    }\n  },\n  searchProducts: async query => {\n    try {\n      const response = await api.get(`/products?search=${query}`);\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      throw ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data) || error;\n    }\n  }\n};","map":{"version":3,"names":["api","productService","getAllProducts","response","get","data","error","_error$response","getProduct","productId","_error$response2","getProductsByCategory","category","_error$response3","searchProducts","query","_error$response4"],"sources":["C:/Users/athar/Downloads/ecommerce-web/ecommerce-web/frontend/src/services/productService.js"],"sourcesContent":["import api from './Api';\r\n\r\nexport const productService = {\r\n  getAllProducts: async () => {\r\n    try {\r\n      const response = await api.get('/products');\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  getProduct: async (productId) => {\r\n    try {\r\n      const response = await api.get(`/products/${productId}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  getProductsByCategory: async (category) => {\r\n    try {\r\n      const response = await api.get(`/products?category=${category}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error;\r\n    }\r\n  },\r\n\r\n  searchProducts: async (query) => {\r\n    try {\r\n      const response = await api.get(`/products?search=${query}`);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error.response?.data || error;\r\n    }\r\n  }\r\n};"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AAEvB,OAAO,MAAMC,cAAc,GAAG;EAC5BC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,WAAW,CAAC;MAC3C,OAAOD,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACd,MAAM,EAAAA,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAEDE,UAAU,EAAE,MAAOC,SAAS,IAAK;IAC/B,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,aAAaK,SAAS,EAAE,CAAC;MACxD,OAAON,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAI,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAJ,KAAK,CAACH,QAAQ,cAAAO,gBAAA,uBAAdA,gBAAA,CAAgBL,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAEDK,qBAAqB,EAAE,MAAOC,QAAQ,IAAK;IACzC,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,sBAAsBQ,QAAQ,EAAE,CAAC;MAChE,OAAOT,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAO,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAP,KAAK,CAACH,QAAQ,cAAAU,gBAAA,uBAAdA,gBAAA,CAAgBR,IAAI,KAAIC,KAAK;IACrC;EACF,CAAC;EAEDQ,cAAc,EAAE,MAAOC,KAAK,IAAK;IAC/B,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAC,oBAAoBW,KAAK,EAAE,CAAC;MAC3D,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAU,gBAAA;MACd,MAAM,EAAAA,gBAAA,GAAAV,KAAK,CAACH,QAAQ,cAAAa,gBAAA,uBAAdA,gBAAA,CAAgBX,IAAI,KAAIC,KAAK;IACrC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}